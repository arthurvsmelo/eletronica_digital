TITLE "Contador síncrono de 0 a 9 crescente/decrescente";

PARAMETERS(
	start_value = 0
);

SUBDESIGN counter_mod10
(
	clock, clear, load, enable, dir, din[3..0] :INPUT;		-- portas de entrada (dir: direction up-HIGH/down-LOW)
	q[3..0], ct :OUTPUT;                                  -- saída do contador de 4 bits, indicador de término de contagem
)

VARIABLE
	count[3..0] :DFF;                               -- células de contagem com flip flops tipo D
 
BEGIN
	DEFAULTS
		q[] = start_value;									-- configura como padrão o valor inicial passado como parâmetro na instância
		ct = GND;
	END DEFAULTS;
	
	count[].clk = clock;                            -- conexão síncrona dos clocks
	count[].clrn = !clear;                          -- clear assíncrono ativo em HIGH
 
	IF load THEN 
		count[].d = din[];  	                        -- carga síncrona
 
	ELSIF !enable THEN 
		count[].d = count[].q;     	               -- mantém a contagem enquanto enable for LOW
 
	ELSIF !dir THEN count[].d = count[].q - 1;      -- decrementa
 
	ELSE count[].d = count[].q + 1;                 -- incrementa
 
	END IF;
 
	IF (count[].q == 0) & !dir & enable THEN			-- contagem mínima
		count[].d = 9;											-- reseta contador para o maior valor
		ct = VCC;
	ELSIF (count[].q == 9) & dir & enable THEN 		-- contagem máxima
		count[].d = 0;											-- reseta contador para o menor valor
		ct = VCC;                                                   			 
	
	ELSE 
		ct = GND;												
	
	END IF;
 
	q[] = count[].q;                                -- saída do contador
 
END;